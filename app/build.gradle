plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
}

//apply from: 'and_res_guard.gradle'

android {
    compileSdk rootProject.ext.android.compileSdk
    defaultConfig {
        applicationId "com.bytedance.tiktok"
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //使用abiFilters筛选你需要的so
            abiFilters 'arm64-v8a'
        }
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true //强力删除无用资源，不打包进apk，需配合minifyEnabled一起使用
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures{
        dataBinding = true
    }
    buildFeatures{
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation rootProject.ext.androisxLibs
    implementation rootProject.ext.immersionbar.immersionbar
    implementation rootProject.ext.tablayout.tablayout
    implementation rootProject.ext.rxjava.rxjava
    implementation rootProject.ext.lottile.lottile
    implementation rootProject.ext.glide.glide
//    implementation rootProject.ext.exoplayerLibs
    implementation rootProject.ext.mediaLibs
    implementation project(':dkplayer-java')
    implementation project(':dkplayer-ui')
    implementation project(path: ':dkplayer-players:ijk')
    implementation project(path: ':dkplayer-players:exo')
    //缓存
    implementation project(':dkplayer-videocache')
    implementation rootProject.ext.ctiao.danmaku
    implementation rootProject.ext.ctiao.ndkbitmap
    debugImplementation rootProject.ext.leakcanary.leakcanary
//    //完整版引入
//    implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer:v8.5.0-release-jitpack'
}

